#!/bin/bash

LEDSOCKET='/var/run/ledd.sock'
DEVPATH="/dev/disk/by-id/$ID_BUS-$ID_SERIAL-part1"
SRCDEVNAME_FILE='/tmp/sdburner-src.devname'
SRCCHKSUM_FILE='/tmp/sdburner-src.md5'
BLOCK_SIZE='1M'

PROG=$0
USAGE="$PROG <dest-dev> <src-dev>"

function fail {
    echo "$PROG: $2" 1>&2
    exit $1
}

function dev_not_found {
    echo "$PROG: $2" 2>&1
    exit $1
}

function dev_broken {
    echo "$PROG: $2" 2>&1
    exit $1
}

function ledd_started {
    [[ -p $LEDSOCKET ]] && return 0
    return 1
}

function ledd_cmd {
    ledd_started || return

    echo "$1" >$LEDSOCKET
    sync
}

# Variants:
# led (red|yellow|green) (on|off)
# led blink (red|yellow|green) (on|off)
# led blink (on|off)

function state {
    ledd_cmd "set_state $1"
}


if [[ "x$ACTION" = "xinfo" ]]; then
    export >>/tmp/usb-storage.log
fi

if [[ "x$ACTION" = "xadd" ]]; then
    # Adding flash drive
    state 'src_present'
    SRC_SIZE=$((`blockdev --getsize64 $DEVPATH`+0))

    BLOCK_COUNT=$((SRC_SIZE/1024/1024))

    if [[ $SRC_SIZE = 0 ]]; then
        state 'bad_src'
        dev_broken 1 "Source device is not ready."
    fi

    state 'src_making_crc'

    dd if=$DEVPATH bs=1M count=$BLOCK_COUNT iflag=nocache | md5sum >$SRCCHKSUM_FILE

    if [[ ${PIPESTATUS[0]} != 0 ]]; then
        state 'bad_src'
        fail 1 "Error calculating source checksum."
    fi

    sync

    if [[ $? != 0 ]]; then
        state 'bad_src'
        fail 1 "Error calculating source checksum."
    fi

    state 'src_ready'

    echo $DEVPATH >$SRCDEVNAME_FILE
fi

if [[ "x$ACTION" = "xremove" ]]; then
    # Removing flash drive
    state 'src_not_present'
    rm -f $SRCDEVNAME_FILE $SRCCHKSUM_FILE
fi

